name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - dev
      - staging
      - prod

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-east-1 
      ECR_REPO: 058264527754.dkr.ecr.us-east-1.amazonaws.com/movie_app_repo
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_HOST: ${{ secrets.DB_HOST }}
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - uses: KengoTODA/actions-setup-docker-compose@v1
        with:
          version: '2.14.2'
      
      - name: Configure AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Authenticate with ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REPO

      - name: Create .env file with secrets
        run: |
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" > .env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          cat .env # Optional: To verify the content (beware of logs)

      - name: Get the latest commit SHA
        id: git-info
        run: echo "sha=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Build frontend image
        run: docker build -t $ECR_REPO:frontend-${{ env.sha }} ./frontend

      - name: Build backend image
        run: docker build -t $ECR_REPO:backend-${{ env.sha }} ./backend

      - name: Start services with Docker Compose
        run: docker-compose --env-file .env up -d

      - name: Wait for services to start
        run: sleep 10

      - name: Perform health check on frontend
        run: curl -f http://localhost:8081 || exit 1

      - name: Tag and push frontend image
        run: |
          docker push $ECR_REPO:frontend-${{ env.sha }}

      - name: Tag and push backend image
        run: |
          docker push $ECR_REPO:backend-${{ env.sha }}

      - name: Clean up
        run: docker-compose down

   

        
          
    
        