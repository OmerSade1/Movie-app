apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
spec:
  replicas: {{ .Values.backend.image.replicas }}
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - name: backend
        image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag }}"
        ports:
        - containerPort: {{ .Values.backend.image.containerPort }}
        resources:
          requests:
            cpu: {{ .Values.backend.image.resources.requests.cpu }}
            memory: {{ .Values.backend.image.resources.requests.memory }}
          limits:
            cpu: {{ .Values.backend.image.resources.limits.cpu }}
            memory: {{ .Values.backend.image.resources.limits.memory }}
        env:
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: my-db-secret
              key: DB_PASSWORD
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: my-db-secret
              key: DB_NAME
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: my-db-secret
              key: DB_HOST
        - name: DB_PORT
          valueFrom:
            secretKeyRef:
              name: my-db-secret
              key: DB_HOST
---
apiVersion: v1
kind: Service
metadata:
  name: backend
spec:
  selector:
    app: backend
  ports:
    - protocol: TCP
      port: 5000
      targetPort: {{ .Values.backend.image.containerPort }}
  type: ClusterIP

